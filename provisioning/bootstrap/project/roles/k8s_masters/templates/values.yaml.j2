# Default values for ako.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: avinetworks/ako
  pullPolicy: IfNotPresent

configs:
  controllerIP: "{{ hostvars[ inventory_hostname | regex_replace('master1','controller') ]['ip_address'] }}"
  controllerVersion: "{{ result['json']['version']['Version'] }}"
  shardVSSize: "MEDIUM"
  passthroughShardSize: "SMALL"
  fullSyncFrequency: "300"
  cloudName: "Default-Cloud"
  clusterName: "akodemo{{ inventory_hostname | regex_replace('^master.pod(\\d+).lab', '\\1') }}"
  defaultDomain: "app.{{ inventory_hostname | regex_replace('master.','') }}"
  disableStaticRouteSync: "false"
  ingressApi: "corev1" #enum: extensionv1 and corev1 - if not set default to corev1
  defaultIngController: "true"
  subnetIP: "{{ hostvars['jumpbox.pod.lab']['Lab_vip_ipam_cidr'].split('/')[0] }}" # Subnet IP of the data network
  subnetPrefix: "{{ hostvars['jumpbox.pod.lab']['Lab_vip_ipam_cidr'].split('/')[1] }}" # Subnet Prefix of the data network
  networkName: "{{ hostvars['jumpbox.pod.lab']['network'] }}" # Network Name of the data network
  l7ShardingScheme: "hostname"
  cniPlugin: "flannel" #enum: calico|canal|flannel|openshift
  logLevel: "INFO" #enum: INFO|DEBUG|WARN|ERROR
  deleteConfig: "false" # Has to be set to true in configmap if user wants to delete AKO created objects from AVI
  serviceType: ClusterIP #enum NodePort|ClusterIP
  serviceEngineGroupName: "Default-Group" # Name of the ServiceEngine Group.
  ## This list of network and cidrs are used in pool placement network for vcenter cloud.
  ## Node Network details are not needed when in nodeport mode / static routes are disabled / non vcenter clouds.
  ## nodeNetworkList: []
  nodeNetworkList:
     - networkName: "{{ hostvars['jumpbox.pod.lab']['network'] }}"
       cidrs:
         - "{{ hostvars['jumpbox.pod.lab']['Lab_vip_ipam_cidr'] }}"


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

nodePortSelector: # Only applicable if serviceType is NodePort
  key: ""
  value: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

avicredentials:
  username: admin
  # Avi controller username
  password: "{{ hostvars['jumpbox.pod.lab']['Lab_avi_admin_password'] }}" 
  # Avi controller password

service:
  type: ClusterIP
  port: 80


persistentVolumeClaim: ""
mountPath: "/log"
logFile: "avi.log"